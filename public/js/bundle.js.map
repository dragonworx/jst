{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/debug/src/browser.js","webpack:///./node_modules/component-emitter/index.js","webpack:///./node_modules/engine.io-parser/lib/browser.js","webpack:///./node_modules/parseqs/index.js","webpack:///./node_modules/component-inherit/index.js","webpack:///./node_modules/socket.io-parser/index.js","webpack:///./node_modules/engine.io-client/lib/xmlhttprequest.js","webpack:///./node_modules/engine.io-client/lib/transport.js","webpack:///external \"React\"","webpack:///./node_modules/parseuri/index.js","webpack:///./node_modules/socket.io-parser/node_modules/isarray/index.js","webpack:///./node_modules/socket.io-parser/is-buffer.js","webpack:///./node_modules/socket.io-client/lib/manager.js","webpack:///./node_modules/engine.io-client/lib/transports/index.js","webpack:///./node_modules/engine.io-client/lib/transports/polling.js","webpack:///./node_modules/has-binary2/index.js","webpack:///./node_modules/yeast/index.js","webpack:///./node_modules/indexof/index.js","webpack:///./node_modules/socket.io-client/lib/socket.js","webpack:///./node_modules/socket.io-client/lib/on.js","webpack:///./node_modules/component-bind/index.js","webpack:///./src/index.tsx","webpack:///external \"ReactDOM\"","webpack:///./src/components/Hello.tsx","webpack:///./node_modules/socket.io-client/lib/index.js","webpack:///./node_modules/socket.io-client/lib/url.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/debug/src/debug.js","webpack:///./node_modules/ms/index.js","webpack:///./node_modules/socket.io-parser/binary.js","webpack:///./node_modules/engine.io-client/lib/index.js","webpack:///./node_modules/engine.io-client/lib/socket.js","webpack:///./node_modules/has-cors/index.js","webpack:///./node_modules/engine.io-client/lib/transports/polling-xhr.js","webpack:///./node_modules/engine.io-parser/lib/keys.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/has-binary2/node_modules/isarray/index.js","webpack:///./node_modules/arraybuffer.slice/index.js","webpack:///./node_modules/after/index.js","webpack:///./node_modules/engine.io-parser/lib/utf8.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","webpack:///./node_modules/blob/index.js","webpack:///./node_modules/engine.io-client/lib/transports/polling-jsonp.js","webpack:///./node_modules/engine.io-client/lib/transports/websocket.js","webpack:///./node_modules/to-array/index.js","webpack:///./node_modules/backo2/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","window","id","document","getElementById","el","createElement","async","src","location","hostname","getElementsByTagName","appendChild","s","g","this","Function","eval","e","process","load","storage","debug","env","DEBUG","log","console","apply","arguments","formatArgs","args","useColors","namespace","humanize","diff","color","splice","index","lastC","replace","match","save","namespaces","removeItem","type","navigator","userAgent","toLowerCase","documentElement","style","WebkitAppearance","firebug","exception","table","parseInt","RegExp","$1","chrome","local","localStorage","localstorage","colors","formatters","j","v","JSON","stringify","err","message","enable","Emitter","obj","mixin","on","addEventListener","event","fn","_callbacks","push","once","off","removeListener","removeAllListeners","removeEventListener","length","cb","callbacks","emit","slice","len","listeners","hasListeners","global","base64encoder","keys","hasBinary","sliceBuffer","after","utf8","ArrayBuffer","isAndroid","test","isPhantomJS","dontSendBlobs","protocol","packets","open","close","ping","pong","upgrade","noop","packetslist","data","Blob","map","ary","each","done","result","Array","next","eachWithIndex","error","msg","encodePacket","packet","supportsBinary","utf8encode","callback","undefined","buffer","encodeBase64Packet","contentArray","Uint8Array","resultBuffer","byteLength","encodeArrayBuffer","fr","FileReader","onload","readAsArrayBuffer","encodeBlobAsArrayBuffer","blob","encodeBlob","base64","encodeBase64Object","encoded","encode","String","strict","b64data","b64","split","readAsDataURL","fromCharCode","typed","basic","btoa","decodePacket","binaryType","utf8decode","charAt","decodeBase64Packet","substr","decode","tryDecode","Number","substring","rest","encodePayload","isBinary","encodePayloadAsBlob","encodePayloadAsArrayBuffer","doneCallback","setLengthHeader","results","join","decodePayload","decodePayloadAsBinary","chr","encodedPackets","totalLength","reduce","acc","toString","resultArray","bufferIndex","forEach","isString","ab","view","charCodeAt","lenStr","binaryIdentifier","size","lengthAry","bufferTail","buffers","tailArray","msgLength","total","str","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","a","b","constructor","binary","isArray","isBuf","Encoder","types","CONNECT","DISCONNECT","EVENT","ACK","ERROR","BINARY_EVENT","BINARY_ACK","Decoder","ERROR_PACKET","encodeAsString","attachments","nsp","payload","tryStringify","reconstructor","BinaryReconstructor","reconPack","removeBlobs","bloblessData","deconstruction","deconstructPacket","pack","unshift","encodeAsBinary","add","buf","Error","parse","tryParse","isPayloadValid","decodeString","takeBinaryData","destroy","finishedReconstruction","binData","reconstructPacket","hasCORS","opts","xdomain","xscheme","enablesXDR","XMLHttpRequest","XDomainRequest","concat","parser","Transport","path","port","secure","query","timestampParam","timestampRequests","readyState","agent","socket","pfx","passphrase","cert","ca","ciphers","rejectUnauthorized","forceNode","extraHeaders","localAddress","onError","desc","description","doOpen","doClose","onClose","send","write","onOpen","writable","onData","onPacket","React","re","parts","indexOf","exec","uri","source","host","authority","ipv6uri","arr","withNativeBuffer","Buffer","isBuffer","withNativeArrayBuffer","isView","eio","Socket","Backoff","has","Manager","nsps","subs","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","min","max","jitter","timeout","connecting","lastPing","encoding","packetBuffer","_parser","encoder","decoder","autoConnect","emitAll","updateSocketIds","generateId","engine","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","maybeReconnectOnOpen","reconnecting","attempts","reconnect","connect","self","skipReconnect","openSub","onopen","errorSub","cleanup","timer","setTimeout","clearTimeout","onping","Date","onpong","ondata","ondecoded","onerror","onConnecting","options","processPacketQueue","shift","subsLength","disconnect","reset","onclose","reason","delay","duration","onreconnect","attempt","XHR","JSONP","websocket","polling","xd","xs","jsonp","isSSL","forceJSONP","parseqs","inherit","yeast","Polling","hasXHR2","responseType","forceBase64","poll","pause","onPause","doPoll","callbackfn","doWrite","schema","sid","withNativeBlob","withNativeFile","File","toJSON","prev","alphabet","seed","num","Math","floor","now","decoded","toArray","hasBin","events","connect_error","connect_timeout","reconnect_attempt","reconnect_failed","reconnect_error","io","json","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","flags","subEvents","ev","compress","pop","onpacket","sameNamespace","rootNamespaceError","onconnect","onevent","onack","ondisconnect","ack","sent","emitBuffered","ReactDOM","Hello_1","y","render","Hello","compiler","framework","props","url","lookup","cache","managers","parsed","forceNew","multiplex","parseuri","loc","href","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","run","marker","runClearTimeout","Item","array","nextTick","title","browser","argv","version","versions","addListener","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","createDebug","prevTime","enabled","curr","ms","coerce","format","formatter","val","hash","abs","selectColor","init","instances","stack","disable","names","skips","instance","h","plural","ceil","parseFloat","isNaN","long","fmtLong","round","fmtShort","packetData","_deconstructPacket","placeholder","_placeholder","newData","_reconstructPacket","pendingBlobs","_removeBlobs","curKey","containingObject","fileReader","transports","transportOptions","writeBuffer","prevBufferLen","policyPort","rememberUpgrade","onlyBinaryUpgrades","perMessageDeflate","threshold","freeGlobal","upgrades","pingInterval","pingTimeout","pingIntervalTimer","pingTimeoutTimer","priorWebsocketSuccess","createTransport","clone","EIO","transport","requestTimeout","protocols","setTransport","onDrain","probe","failed","onTransportOpen","upgradeLosesBinary","upgrading","flush","freezeTransport","onTransportClose","onupgrade","to","onHandshake","setPing","code","filterUpgrades","onHeartbeat","sendPacket","waitForUpgrade","cleanupAndClose","filteredUpgrades","empty","Request","method","unloadHandler","requests","abort","request","req","sendXhr","pollXhr","xhr","setDisableHeaderCheck","setRequestHeader","withCredentials","hasXDR","onLoad","responseText","onreadystatechange","contentType","getResponseHeader","status","requestsCount","onSuccess","fromError","response","attachEvent","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","arg","encodingOrOffset","allocUnsafe","from","TypeError","byteOffset","fromArrayLike","fromArrayBuffer","string","isEncoding","actual","fromString","checked","copy","isnan","fromObject","assertSize","loweredCase","utf8ToBytes","base64ToBytes","swap","bidirectionalIndexOf","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","hexWrite","offset","remaining","strLen","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","start","end","fromByteArray","utf8Slice","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","x","list","pos","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","INVALID_BASE64_RE","leadSurrogate","toByteArray","trim","stringtrim","base64clean","dst","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","len2","encodeChunk","tripletToBase64","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","arraybuffer","abv","ii","count","err_cb","bail","proxy","__WEBPACK_AMD_DEFINE_RESULT__","root","freeExports","byteCount","byteIndex","stringFromCharCode","ucs2decode","extra","counter","checkScalarValue","toUpperCase","createByte","encodeCodePoint","symbol","readContinuationByte","continuationByte","decodeSymbol","byte1","byteString","ucs2encode","webpackPolyfill","deprecate","paths","children","chars","encoded1","encoded2","encoded3","encoded4","bufferLength","BlobBuilder","WebKitBlobBuilder","MSBlobBuilder","MozBlobBuilder","blobSupported","blobSupportsArrayBufferView","blobBuilderSupported","append","getBlob","mapArrayBufferViews","chunk","BlobBuilderConstructor","bb","BlobConstructor","JSONPPolling","rNewline","rEscapedNewline","___eio","script","parentNode","removeChild","form","iframe","insertAt","insertBefore","head","body","area","iframeId","className","position","top","left","setAttribute","complete","initIframe","html","action","submit","NodeWebSocket","BrowserWebSocket","WebSocket","MozWebSocket","WS","usingBrowserWebSocket","check","headers","ws","supports","addEventListeners","onmessage","factor","rand","random","deviation"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// webpack-livereload-plugin\n \t(function() {\n \t  if (typeof window === \"undefined\") { return };\n \t  var id = \"webpack-livereload-plugin-script\";\n \t  if (document.getElementById(id)) { return; }\n \t  var el = document.createElement(\"script\");\n \t  el.id = id;\n \t  el.async = true;\n \t  el.src = \"//\" + location.hostname + \":35729/livereload.js\";\n \t  document.getElementsByTagName(\"head\")[0].appendChild(el);\n \t}());\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 22);\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // Internet Explorer and Edge do not support colors.\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","/**\n * Module dependencies.\n */\n\nvar keys = require('./keys');\nvar hasBinary = require('has-binary2');\nvar sliceBuffer = require('arraybuffer.slice');\nvar after = require('after');\nvar utf8 = require('./utf8');\n\nvar base64encoder;\nif (global && global.ArrayBuffer) {\n  base64encoder = require('base64-arraybuffer');\n}\n\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\nvar dontSendBlobs = isAndroid || isPhantomJS;\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if (typeof utf8encode === 'function') {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = (packet.data === undefined)\n    ? undefined\n    : packet.data.buffer || packet.data;\n\n  if (global.ArrayBuffer && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (Blob && data instanceof global.Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  }\n\n  // might be an object with { base64: true, data: dataAsBase64String }\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n\n/**\n * Encode packet helpers for binary types\n */\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n  resultBuffer[0] = packets[packet.type];\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i+1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n  fr.onload = function() {\n    packet.data = fr.result;\n    exports.encodePacket(packet, supportsBinary, true, callback);\n  };\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n\n  return callback(blob);\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n  if (Blob && packet.data instanceof global.Blob) {\n    var fr = new FileReader();\n    fr.onload = function() {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n  message += global.btoa(b64data);\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  }\n  // String data\n  if (typeof data === 'string') {\n    if (data.charAt(0) === 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      data = tryDecode(data);\n      if (data === false) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n  return { type: packetslist[type], data: rest };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data, { strict: false });\n  } catch (e) {\n    return false;\n  }\n  return data;\n}\n\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  if (!base64encoder) {\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data !== 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data === '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = '', n, msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (chr !== ':') {\n      length += chr;\n      continue;\n    }\n\n    if (length === '' || (length != (n = Number(length)))) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    msg = data.substr(i + 1, n);\n\n    if (length != msg.length) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    if (msg.length) {\n      packet = exports.decodePacket(msg, binaryType, false);\n\n      if (err.type === packet.type && err.data === packet.data) {\n        // parser error in individual packet - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      var ret = callback(packet, i + n, l);\n      if (false === ret) return;\n    }\n\n    // advance cursor\n    i += n;\n    length = '';\n  }\n\n  if (length !== '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function(err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function(acc, p) {\n      var len;\n      if (typeof p === 'string'){\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n\n    var resultArray = new Uint8Array(totalLength);\n\n    var bufferIndex = 0;\n    encodedPackets.forEach(function(p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n      if (isString) {\n        var view = new Uint8Array(p.length);\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n        ab = view.buffer;\n      }\n\n      if (isString) { // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else { // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n      resultArray[bufferIndex++] = 255;\n\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n\n    return callback(resultArray.buffer);\n  });\n};\n\n/**\n * Encode as Blob\n */\n\nexports.encodePayloadAsBlob = function(packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = (encoded instanceof ArrayBuffer)\n        ? encoded.byteLength\n        : encoded.size;\n\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(new Blob(results));\n  });\n};\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1; ; i++) {\n      if (tailArray[i] === 255) break;\n\n      // 310 = char length of Number.MAX_VALUE\n      if (msgLength.length > 310) {\n        return callback(err, 0, 1);\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function(buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n","/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\r\n\r\nexports.encode = function (obj) {\r\n  var str = '';\r\n\r\n  for (var i in obj) {\r\n    if (obj.hasOwnProperty(i)) {\r\n      if (str.length) str += '&';\r\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\r\n    }\r\n  }\r\n\r\n  return str;\r\n};\r\n\r\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\r\n\r\nexports.decode = function(qs){\r\n  var qry = {};\r\n  var pairs = qs.split('&');\r\n  for (var i = 0, l = pairs.length; i < l; i++) {\r\n    var pair = pairs[i].split('=');\r\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n  }\r\n  return qry;\r\n};\r\n","\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar binary = require('./binary');\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'ACK',\n  'ERROR',\n  'BINARY_EVENT',\n  'BINARY_ACK'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\nvar ERROR_PACKET = exports.ERROR + '\"encode error\"';\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    encodeAsBinary(obj, callback);\n  } else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n\n  // first is type\n  var str = '' + obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    str += obj.attachments + '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' !== obj.nsp) {\n    str += obj.nsp + ',';\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    var payload = tryStringify(obj.data);\n    if (payload !== false) {\n      str += payload;\n    } else {\n      return ERROR_PACKET;\n    }\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\nfunction tryStringify(str) {\n  try {\n    return JSON.stringify(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an ecoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if (typeof obj === 'string') {\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  }\n  else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  }\n  else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var i = 0;\n  // look up type\n  var p = {\n    type: Number(str.charAt(0))\n  };\n\n  if (null == exports.types[p.type]) {\n    return error('unknown packet type ' + p.type);\n  }\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\n    var buf = '';\n    while (str.charAt(++i) !== '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n    if (buf != Number(buf) || str.charAt(i) !== '-') {\n      throw new Error('Illegal attachments');\n    }\n    p.attachments = Number(buf);\n  }\n\n  // look up namespace (if any)\n  if ('/' === str.charAt(i + 1)) {\n    p.nsp = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' === c) break;\n      p.nsp += c;\n      if (i === str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      p.id += str.charAt(i);\n      if (i === str.length) break;\n    }\n    p.id = Number(p.id);\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    var payload = tryParse(str.substr(i));\n    var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));\n    if (isPayloadValid) {\n      p.data = payload;\n    } else {\n      return error('invalid payload');\n    }\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\nfunction tryParse(str) {\n  try {\n    return JSON.parse(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length === this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(msg) {\n  return {\n    type: exports.ERROR,\n    data: 'parser error: ' + msg\n  };\n}\n","// browser shim for xmlhttprequest module\n\nvar hasCORS = require('has-cors');\n\nmodule.exports = function (opts) {\n  var xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  var xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  var enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) { }\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) { }\n\n  if (!xdomain) {\n    try {\n      return new global[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n    } catch (e) { }\n  }\n};\n","/**\n * Module dependencies.\n */\n\nvar parser = require('engine.io-parser');\nvar Emitter = require('component-emitter');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Transport;\n\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport (opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n  this.forceNode = opts.forceNode;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n  this.localAddress = opts.localAddress;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Transport.prototype);\n\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n\n/**\n * Opens the transport.\n *\n * @api public\n */\n\nTransport.prototype.open = function () {\n  if ('closed' === this.readyState || '' === this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\nTransport.prototype.send = function (packets) {\n  if ('open' === this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n\n/**\n * Called upon open\n *\n * @api private\n */\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function (data) {\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n\n/**\n * Called with a decoded packet.\n */\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};\n","module.exports = React;","/**\r\n * Parses an URI\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\r\n\r\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\r\nvar parts = [\r\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\r\n];\r\n\r\nmodule.exports = function parseuri(str) {\r\n    var src = str,\r\n        b = str.indexOf('['),\r\n        e = str.indexOf(']');\r\n\r\n    if (b != -1 && e != -1) {\r\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\r\n    }\r\n\r\n    var m = re.exec(str || ''),\r\n        uri = {},\r\n        i = 14;\r\n\r\n    while (i--) {\r\n        uri[parts[i]] = m[i] || '';\r\n    }\r\n\r\n    if (b != -1 && e != -1) {\r\n        uri.source = src;\r\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\r\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\r\n        uri.ipv6uri = true;\r\n    }\r\n\r\n    return uri;\r\n};\r\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","\nmodule.exports = isBuf;\n\nvar withNativeBuffer = typeof global.Buffer === 'function' && typeof global.Buffer.isBuffer === 'function';\nvar withNativeArrayBuffer = typeof global.ArrayBuffer === 'function';\n\nvar isView = (function () {\n  if (withNativeArrayBuffer && typeof global.ArrayBuffer.isView === 'function') {\n    return global.ArrayBuffer.isView;\n  } else {\n    return function (obj) { return obj.buffer instanceof global.ArrayBuffer; };\n  }\n})();\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (withNativeBuffer && global.Buffer.isBuffer(obj)) ||\n          (withNativeArrayBuffer && (obj instanceof global.ArrayBuffer || isView(obj)));\n}\n","\n/**\n * Module dependencies.\n */\n\nvar eio = require('engine.io-client');\nvar Socket = require('./socket');\nvar Emitter = require('component-emitter');\nvar parser = require('socket.io-parser');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:manager');\nvar indexOf = require('indexof');\nvar Backoff = require('backo2');\n\n/**\n * IE6+ hasOwnProperty\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager (uri, opts) {\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' === typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n  var _parser = opts.parser || parser;\n  this.encoder = new _parser.Encoder();\n  this.decoder = new _parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function () {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function () {\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.generateId(nsp);\n    }\n  }\n};\n\n/**\n * generate `socket.id` for the given `nsp`\n *\n * @param {String} nsp\n * @return {String}\n * @api private\n */\n\nManager.prototype.generateId = function (nsp) {\n  return (nsp === '/' ? '' : (nsp + '#')) + this.engine.id;\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function (v) {\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function (v) {\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function (v) {\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function (v) {\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function (v) {\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function (v) {\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function () {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function (fn, opts) {\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function () {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function (data) {\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    // set timer\n    var timer = setTimeout(function () {\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function () {\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\nManager.prototype.onping = function () {\n  this.lastPing = new Date();\n  this.emitAll('ping');\n};\n\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\nManager.prototype.onpong = function () {\n  this.emitAll('pong', new Date() - this.lastPing);\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function (data) {\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function (err) {\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function (nsp, opts) {\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp, opts);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function () {\n      socket.id = self.generateId(nsp);\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting event is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting () {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function (socket) {\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function (packet) {\n  debug('writing packet %j', packet);\n  var self = this;\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function (encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function () {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function () {\n  debug('cleanup');\n\n  var subsLength = this.subs.length;\n  for (var i = 0; i < subsLength; i++) {\n    var sub = this.subs.shift();\n    sub.destroy();\n  }\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function () {\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n  if ('opening' === this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function (reason) {\n  debug('onclose');\n\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function () {\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n\n    this.reconnecting = true;\n    var timer = setTimeout(function () {\n      if (self.skipReconnect) return;\n\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function (err) {\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function () {\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n","/**\n * Module dependencies\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar XHR = require('./polling-xhr');\nvar JSONP = require('./polling-jsonp');\nvar websocket = require('./websocket');\n\n/**\n * Export transports.\n */\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling (opts) {\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}\n","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parseqs = require('parseqs');\nvar parser = require('engine.io-parser');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:polling');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Polling;\n\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = (function () {\n  var XMLHttpRequest = require('xmlhttprequest-ssl');\n  var xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\nfunction Polling (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(Polling, Transport);\n\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function () {\n  this.poll();\n};\n\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\nPolling.prototype.pause = function (onPause) {\n  var self = this;\n\n  this.readyState = 'pausing';\n\n  function pause () {\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function () {\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function () {\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\nPolling.prototype.poll = function () {\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\nPolling.prototype.onData = function (data) {\n  var self = this;\n  debug('polling got data %s', data);\n  var callback = function (packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' === self.readyState) {\n      self.onOpen();\n    }\n\n    // if its a close packet, we close the ongoing requests\n    if ('close' === packet.type) {\n      self.onClose();\n      return false;\n    }\n\n    // otherwise bypass onData and handle the message\n    self.onPacket(packet);\n  };\n\n  // decode payload\n  parser.decodePayload(data, this.socket.binaryType, callback);\n\n  // if an event did not trigger closing\n  if ('closed' !== this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' === this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function () {\n  var self = this;\n\n  function close () {\n    debug('writing close packet');\n    self.write([{ type: 'close' }]);\n  }\n\n  if ('open' === this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\nPolling.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n  var callbackfn = function () {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nPolling.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = '';\n\n  // cache busting is forced\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // avoid port if default for schema\n  if (this.port && (('https' === schema && Number(this.port) !== 443) ||\n     ('http' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n","/* global Blob File */\n\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' ||\n                        typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof File === 'function' ||\n                        typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Supports Buffer, ArrayBuffer, Blob and File.\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary (obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  if (isArray(obj)) {\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (hasBinary(obj[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  if ((typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj)) ||\n    (typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||\n    (withNativeBlob && obj instanceof Blob) ||\n    (withNativeFile && obj instanceof File)\n  ) {\n    return true;\n  }\n\n  // see: https://github.com/Automattic/has-binary/pull/4\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n    return hasBinary(obj.toJSON(), true);\n  }\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};","\n/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar toArray = require('to-array');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:socket');\nvar parseqs = require('parseqs');\nvar hasBin = require('has-binary2');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket (io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  this.flags = {};\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n  if (this.io.autoConnect) this.open();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function () {\n  if (this.connected) return this;\n\n  this.subEvents();\n  this.io.open(); // ensure open\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var packet = {\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\n    data: args\n  };\n\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress;\n\n  // event ack callback\n  if ('function' === typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  this.flags = {};\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\n      debug('sending connect packet with query %s', query);\n      this.packet({type: parser.CONNECT, query: query});\n    } else {\n      this.packet({type: parser.CONNECT});\n    }\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function (packet) {\n  var sameNamespace = packet.nsp === this.nsp;\n  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';\n\n  if (!sameNamespace && !rootNamespaceError) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n\n    self.packet({\n      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n  if ('function' === typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function () {\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function (compress) {\n  this.flags.compress = compress;\n  return this;\n};\n\n/**\n * Sets the binary flag\n *\n * @param {Boolean} whether the emitted data contains binary\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.binary = function (binary) {\n  this.flags.binary = binary;\n  return this;\n};\n","\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on (obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function () {\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n","/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { Hello } from \"./components/Hello\";\nimport { connect } from 'socket.io-client';\n\nconst socket = connect(`${location.protocol}//${location.host}`);\n\nsocket.on('connect', function(){\n    console.log(\"connect!\");\n});\n\nsocket.on('event', function(a, b, c) {\n    console.log(\"event\", a, b, c);\n    socket.emit('message', {y:1});\n});\n\nReactDOM.render(\n    <Hello compiler=\"TypeScript\" framework=\"React\" />,\n    document.getElementById(\"example\")\n);","module.exports = ReactDOM;","import * as React from \"react\";\n\nexport interface HelloProps { compiler: string; framework: string; }\n\nexport const Hello = (props: HelloProps) => <h1>Hello from {props.compiler} and {props.framework}!</h1>;\n\n// 'HelloProps' describes the shape of props...\n// State is never set so we use the '{}' type.\n// export class Hello extends React.Component<HelloProps, {}> {\n//   render() {\n//       return <h1>Hello from {this.props.compiler} and {this.props.framework}!</h1>;\n//   }\n// }\n\n//","\n/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar parser = require('socket.io-parser');\nvar Manager = require('./manager');\nvar debug = require('debug')('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup (uri, opts) {\n  if (typeof uri === 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] ||\n                      false === opts.multiplex || sameNamespace;\n\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.query;\n  }\n  return io.socket(parsed.path, opts);\n}\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');\n","\n/**\n * Module dependencies.\n */\n\nvar parseuri = require('parseuri');\nvar debug = require('debug')('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url (uri, loc) {\n  var obj = uri;\n\n  // default to window.location\n  loc = loc || global.location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' === typeof uri) {\n    if ('/' === uri.charAt(0)) {\n      if ('/' === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n      if ('undefined' !== typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n  // define unique id\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof global.Blob === 'function' || toString.call(global.Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof global.File === 'function' || toString.call(global.File) === '[object FileConstructor]';\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet) {\n  var buffers = [];\n  var packetData = packet.data;\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData, buffers);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\nfunction _deconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (isBuf(data)) {\n    var placeholder = { _placeholder: true, num: buffers.length };\n    buffers.push(data);\n    return placeholder;\n  } else if (isArray(data)) {\n    var newData = new Array(data.length);\n    for (var i = 0; i < data.length; i++) {\n      newData[i] = _deconstructPacket(data[i], buffers);\n    }\n    return newData;\n  } else if (typeof data === 'object' && !(data instanceof Date)) {\n    var newData = {};\n    for (var key in data) {\n      newData[key] = _deconstructPacket(data[key], buffers);\n    }\n    return newData;\n  }\n  return data;\n}\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  packet.data = _reconstructPacket(packet.data, buffers);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\nfunction _reconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (data && data._placeholder) {\n    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n  } else if (isArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      data[i] = _reconstructPacket(data[i], buffers);\n    }\n  } else if (typeof data === 'object') {\n    for (var key in data) {\n      data[key] = _reconstructPacket(data[key], buffers);\n    }\n  }\n\n  return data;\n}\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (typeof obj === 'object' && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n","\nmodule.exports = require('./socket');\n\n/**\n * Exports parser\n *\n * @api public\n *\n */\nmodule.exports.parser = require('engine.io-parser');\n","/**\n * Module dependencies.\n */\n\nvar transports = require('./transports/index');\nvar Emitter = require('component-emitter');\nvar debug = require('debug')('engine.io-client:socket');\nvar index = require('indexof');\nvar parser = require('engine.io-parser');\nvar parseuri = require('parseuri');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket (uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure\n    : (global.location && 'https:' === location.protocol);\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname ||\n    (global.location ? location.hostname : 'localhost');\n  this.port = opts.port || (global.location && location.port\n      ? location.port\n      : (this.secure ? 443 : 80));\n  this.query = opts.query || {};\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.transportOptions = opts.transportOptions || {};\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.prevBufferLen = 0;\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  }\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n  this.forceNode = !!opts.forceNode;\n\n  // other options for Node.js client\n  var freeGlobal = typeof global === 'object' && global;\n  if (freeGlobal.global === freeGlobal) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n\n    if (opts.localAddress) {\n      this.localAddress = opts.localAddress;\n    }\n  }\n\n  // set on handshake\n  this.id = null;\n  this.upgrades = null;\n  this.pingInterval = null;\n  this.pingTimeout = null;\n\n  // set on heartbeat\n  this.pingIntervalTimer = null;\n  this.pingTimeoutTimer = null;\n\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports/index');\nSocket.parser = require('engine.io-parser');\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // per-transport options\n  var options = this.transportOptions[name] || {};\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    query: query,\n    socket: this,\n    agent: options.agent || this.agent,\n    hostname: options.hostname || this.hostname,\n    port: options.port || this.port,\n    secure: options.secure || this.secure,\n    path: options.path || this.path,\n    forceJSONP: options.forceJSONP || this.forceJSONP,\n    jsonp: options.jsonp || this.jsonp,\n    forceBase64: options.forceBase64 || this.forceBase64,\n    enablesXDR: options.enablesXDR || this.enablesXDR,\n    timestampRequests: options.timestampRequests || this.timestampRequests,\n    timestampParam: options.timestampParam || this.timestampParam,\n    policyPort: options.policyPort || this.policyPort,\n    pfx: options.pfx || this.pfx,\n    key: options.key || this.key,\n    passphrase: options.passphrase || this.passphrase,\n    cert: options.cert || this.cert,\n    ca: options.ca || this.ca,\n    ciphers: options.ciphers || this.ciphers,\n    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\n    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\n    extraHeaders: options.extraHeaders || this.extraHeaders,\n    forceNode: options.forceNode || this.forceNode,\n    localAddress: options.localAddress || this.localAddress,\n    requestTimeout: options.requestTimeout || this.requestTimeout,\n    protocols: options.protocols || void (0)\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function () {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function (transport) {\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n  .on('drain', function () {\n    self.onDrain();\n  })\n  .on('packet', function (packet) {\n    self.onPacket(packet);\n  })\n  .on('error', function (e) {\n    self.onError(e);\n  })\n  .on('close', function () {\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, { probe: 1 });\n  var failed = false;\n  var self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen () {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' === self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport () {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  // Handle any error that happens while probing\n  function onerror (err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose () {\n    onerror('transport closed');\n  }\n\n  // When the socket is closed while we're probing\n  function onclose () {\n    onerror('socket closed');\n  }\n\n  // When the socket is upgraded while we're probing\n  function onupgrade (to) {\n    if (transport && to.name !== transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  // Remove all listeners on the transport and on self\n  function cleanup () {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' === this.readyState || 'open' === this.readyState ||\n      'closing' === this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(JSON.parse(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if ('closed' === this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' === self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || (self.pingInterval + self.pingTimeout));\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function () {\n    self.emit('ping');\n  });\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function () {\n  this.writeBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' !== this.readyState && this.transport.writable &&\n    !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write =\nSocket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' === typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing';\n\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function () {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close () {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose () {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade () {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n\n    // clean buffers after, so users can still\n    // grab the buffers on `close` event\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","/**\n * Module requirements.\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar Polling = require('./polling');\nvar Emitter = require('component-emitter');\nvar inherit = require('component-inherit');\nvar debug = require('debug')('engine.io-client:polling-xhr');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n/**\n * Empty function\n */\n\nfunction empty () {}\n\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction XHR (opts) {\n  Polling.call(this, opts);\n  this.requestTimeout = opts.requestTimeout;\n  this.extraHeaders = opts.extraHeaders;\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = opts.hostname !== global.location.hostname ||\n      port !== opts.port;\n    this.xs = opts.secure !== isSSL;\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling);\n\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function (opts) {\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  opts.requestTimeout = this.requestTimeout;\n\n  // other options for Node.js client\n  opts.extraHeaders = this.extraHeaders;\n\n  return new Request(opts);\n};\n\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\nXHR.prototype.doWrite = function (data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function (err) {\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nXHR.prototype.doPoll = function () {\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function (data) {\n    self.onData(data);\n  });\n  req.on('error', function (err) {\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Request (opts) {\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined !== opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n  this.requestTimeout = opts.requestTimeout;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n\n  this.create();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function () {\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n\n    if ('POST' === this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    try {\n      xhr.setRequestHeader('Accept', '*/*');\n    } catch (e) {}\n\n    // ie6 check\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    if (this.requestTimeout) {\n      xhr.timeout = this.requestTimeout;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function () {\n        self.onLoad();\n      };\n      xhr.onerror = function () {\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 2) {\n          try {\n            var contentType = xhr.getResponseHeader('Content-Type');\n            if (self.supportsBinary && contentType === 'application/octet-stream') {\n              xhr.responseType = 'arraybuffer';\n            }\n          } catch (e) {}\n        }\n        if (4 !== xhr.readyState) return;\n        if (200 === xhr.status || 1223 === xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function () {\n            self.onError(xhr.status);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function () {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (global.document) {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function () {\n  this.emit('success');\n  this.cleanup();\n};\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function (data) {\n  this.emit('data', data);\n  this.onSuccess();\n};\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function (err) {\n  this.emit('error', err);\n  this.cleanup(true);\n};\n\n/**\n * Cleans up house.\n *\n * @api private\n */\n\nRequest.prototype.cleanup = function (fromError) {\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\n    return;\n  }\n  // xmlhttprequest\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch (e) {}\n  }\n\n  if (global.document) {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function () {\n  var data;\n  try {\n    var contentType;\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type');\n    } catch (e) {}\n    if (contentType === 'application/octet-stream') {\n      data = this.xhr.response || this.xhr.responseText;\n    } else {\n      data = this.xhr.responseText;\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n  if (null != data) {\n    this.onData(data);\n  }\n};\n\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\nRequest.prototype.hasXDR = function () {\n  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n};\n\n/**\n * Aborts the request.\n *\n * @api public\n */\n\nRequest.prototype.abort = function () {\n  this.cleanup();\n};\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (global.document) {\n  if (global.attachEvent) {\n    global.attachEvent('onunload', unloadHandler);\n  } else if (global.addEventListener) {\n    global.addEventListener('beforeunload', unloadHandler, false);\n  }\n}\n\nfunction unloadHandler () {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n","\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n","module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n","/*! https://mths.be/utf8js v2.1.2 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint, strict) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tif (strict) {\n\t\t\t\tthrow Error(\n\t\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t\t' is not a scalar value'\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint, strict) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tif (!checkScalarValue(codePoint, strict)) {\n\t\t\t\tcodePoint = 0xFFFD;\n\t\t\t}\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string, opts) {\n\t\topts = opts || {};\n\t\tvar strict = false !== opts.strict;\n\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint, strict);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol(strict) {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\treturn checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString, opts) {\n\t\topts = opts || {};\n\t\tvar strict = false !== opts.strict;\n\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol(strict)) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar utf8 = {\n\t\t'version': '2.1.2',\n\t\t'encode': utf8encode,\n\t\t'decode': utf8decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn utf8;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = utf8;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tvar object = {};\n\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\tfor (var key in utf8) {\n\t\t\t\thasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.utf8 = utf8;\n\t}\n\n}(this));\n","module.exports = function(module) {\r\n\tif (!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(){\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n  // Use a lookup table to find the index.\n  var lookup = new Uint8Array(256);\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i+1)];\n      encoded3 = lookup[base64.charCodeAt(i+2)];\n      encoded4 = lookup[base64.charCodeAt(i+3)];\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})();\n","/**\n * Create a blob builder even when vendor prefixes exist\n */\n\nvar BlobBuilder = global.BlobBuilder\n  || global.WebKitBlobBuilder\n  || global.MSBlobBuilder\n  || global.MozBlobBuilder;\n\n/**\n * Check if Blob constructor is supported\n */\n\nvar blobSupported = (function() {\n  try {\n    var a = new Blob(['hi']);\n    return a.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if Blob constructor supports ArrayBufferViews\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\n */\n\nvar blobSupportsArrayBufferView = blobSupported && (function() {\n  try {\n    var b = new Blob([new Uint8Array([1,2])]);\n    return b.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if BlobBuilder is supported\n */\n\nvar blobBuilderSupported = BlobBuilder\n  && BlobBuilder.prototype.append\n  && BlobBuilder.prototype.getBlob;\n\n/**\n * Helper function that maps ArrayBufferViews to ArrayBuffers\n * Used by BlobBuilder constructor and old browsers that didn't\n * support it in the Blob constructor.\n */\n\nfunction mapArrayBufferViews(ary) {\n  for (var i = 0; i < ary.length; i++) {\n    var chunk = ary[i];\n    if (chunk.buffer instanceof ArrayBuffer) {\n      var buf = chunk.buffer;\n\n      // if this is a subarray, make a copy so we only\n      // include the subarray region from the underlying buffer\n      if (chunk.byteLength !== buf.byteLength) {\n        var copy = new Uint8Array(chunk.byteLength);\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n        buf = copy.buffer;\n      }\n\n      ary[i] = buf;\n    }\n  }\n}\n\nfunction BlobBuilderConstructor(ary, options) {\n  options = options || {};\n\n  var bb = new BlobBuilder();\n  mapArrayBufferViews(ary);\n\n  for (var i = 0; i < ary.length; i++) {\n    bb.append(ary[i]);\n  }\n\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\n};\n\nfunction BlobConstructor(ary, options) {\n  mapArrayBufferViews(ary);\n  return new Blob(ary, options || {});\n};\n\nmodule.exports = (function() {\n  if (blobSupported) {\n    return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\n  } else if (blobBuilderSupported) {\n    return BlobBuilderConstructor;\n  } else {\n    return undefined;\n  }\n})();\n","\n/**\n * Module requirements.\n */\n\nvar Polling = require('./polling');\nvar inherit = require('component-inherit');\n\n/**\n * Module exports.\n */\n\nmodule.exports = JSONPPolling;\n\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n\n/**\n * Noop.\n */\n\nfunction empty () { }\n\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\nfunction JSONPPolling (opts) {\n  Polling.call(this, opts);\n\n  this.query = this.query || {};\n\n  // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    if (!global.___eio) global.___eio = [];\n    callbacks = global.___eio;\n  }\n\n  // callback identifier\n  this.index = callbacks.length;\n\n  // add callback to jsonp global\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  });\n\n  // append to query string\n  this.query.j = this.index;\n\n  // prevent spurious errors from being emitted when the window is unloaded\n  if (global.document && global.addEventListener) {\n    global.addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(JSONPPolling, Polling);\n\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n  script.onerror = function (e) {\n    self.onError('jsonp poll error', e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n  if (insertAt) {\n    insertAt.parentNode.insertBefore(script, insertAt);\n  } else {\n    (document.head || document.body).appendChild(script);\n  }\n  this.script = script;\n\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete () {\n    initIframe();\n    fn();\n  }\n\n  function initIframe () {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe();\n\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch (e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function () {\n      if (self.iframe.readyState === 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};\n","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parser = require('engine.io-parser');\nvar parseqs = require('parseqs');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:websocket');\nvar BrowserWebSocket = global.WebSocket || global.MozWebSocket;\nvar NodeWebSocket;\nif (typeof window === 'undefined') {\n  try {\n    NodeWebSocket = require('ws');\n  } catch (e) { }\n}\n\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\nvar WebSocket = BrowserWebSocket;\nif (!WebSocket && typeof window === 'undefined') {\n  WebSocket = NodeWebSocket;\n}\n\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  this.perMessageDeflate = opts.perMessageDeflate;\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\n  this.protocols = opts.protocols;\n  if (!this.usingBrowserWebSocket) {\n    WebSocket = NodeWebSocket;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport);\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function () {\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var uri = this.uri();\n  var protocols = this.protocols;\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate\n  };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n  if (this.localAddress) {\n    opts.localAddress = this.localAddress;\n  }\n\n  try {\n    this.ws = this.usingBrowserWebSocket ? (protocols ? new WebSocket(uri, protocols) : new WebSocket(uri)) : new WebSocket(uri, protocols, opts);\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'nodebuffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function () {\n  var self = this;\n\n  this.ws.onopen = function () {\n    self.onOpen();\n  };\n  this.ws.onclose = function () {\n    self.onClose();\n  };\n  this.ws.onmessage = function (ev) {\n    self.onData(ev.data);\n  };\n  this.ws.onerror = function (e) {\n    self.onError('websocket error', e);\n  };\n};\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n\n  // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n  var total = packets.length;\n  for (var i = 0, l = total; i < l; i++) {\n    (function (packet) {\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\n        if (!self.usingBrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' === typeof data ? global.Buffer.byteLength(data) : data.length;\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n        try {\n          if (self.usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done () {\n    self.emit('flush');\n\n    // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n    setTimeout(function () {\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function () {\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function () {\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = '';\n\n  // avoid port if default for schema\n  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||\n    ('ws' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\nWS.prototype.check = function () {\n  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n};\n","module.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n"],"sourceRoot":""}